[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "samson-negotiation-service"
version = "0.1.0"
description = "FastAPI service for diplomatic negotiations with WebRTC A/V streaming"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    # Core dependencies
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "structlog>=23.0.0",
    "jsonschema>=4.0.0",
    "ruamel.yaml>=0.17.0",
    # WebRTC and media processing
    "aiortc>=1.6.0",
    "av>=10.0.0", # PyAV for video processing
    # Optional dependencies for enhanced functionality
    "numpy>=1.24.0", # For video frame processing
    "psutil>=5.9.0", # For resource monitoring
    # Development and testing
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    # Additional dependencies from imports
    "websockets>=12.0.0",
    "python-multipart>=0.0.6",
    "python-dotenv>=1.0.0",
    # Provider dependencies
    "google-generativeai>=0.8.0",
    "openai>=1.0.0",
    "anthropic>=0.5.0",
    "coqui-tts>=0.24.0",
    "faster-whisper>=0.10.0",
    "torch>=2.0.0",
    "torchaudio>=2.0.0",
    "soundfile>=0.12.0",
    "scipy>=1.11.0",
    "pillow>=11.3.0",
    "aiohttp>=3.12.15",
    "google-genai>=1.38.0",
    "elevenlabs>=2.16.0",
    "torchvision>=0.23.0",
    "dlib>=20.0.0",
    "face-alignment>=1.4.1",
    "opencv-python>=4.11.0.86",
    "scikit-image>=0.25.2",
    "librosa>=0.11.0",
    "pydub>=0.25.1",
    "imageio>=2.37.0",
    "imageio-ffmpeg>=0.6.0",
    "yacs>=0.1.8",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=.",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--asyncio-mode=auto"
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
strict_optional = true

[[tool.mypy.overrides]]
module = [
    "aiortc.*",
    "av.*",
    "numpy.*",
    "coqui_tts.*",
    "faster_whisper.*",
    "torch.*",
    "torchaudio.*",
    "soundfile.*",
    "scipy.*",
    "google.generativeai.*",
    "openai.*",
    "anthropic.*",
]
ignore_missing_imports = true

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.uv]
dev-dependencies = [
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]
